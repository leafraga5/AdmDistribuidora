-- MySQL Script generated by MySQL Workbench
-- Thu Aug 22 01:01:05 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema u724389367_desax
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `u724389367_desax` ;

-- -----------------------------------------------------
-- Schema u724389367_desax
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `u724389367_desax` DEFAULT CHARACTER SET utf8 ;
USE `u724389367_desax` ;

-- -----------------------------------------------------
-- Table `u724389367_desax`.`clientes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `u724389367_desax`.`clientes` ;

CREATE TABLE IF NOT EXISTS `u724389367_desax`.`clientes` (
  `id_cliente` INT NOT NULL AUTO_INCREMENT,
  `nombre_cliente` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`id_cliente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `u724389367_desax`.`facturas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `u724389367_desax`.`facturas` ;

CREATE TABLE IF NOT EXISTS `u724389367_desax`.`facturas` (
  `id_factura` INT NOT NULL AUTO_INCREMENT,
  `clientes_id_cliente` INT NOT NULL,
  `fecha_factura` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `tipo_factura` VARCHAR(5) NOT NULL,
  `vendedor_factura` VARCHAR(45) NULL,
  PRIMARY KEY (`id_factura`),
  INDEX `fk_facturas_clientes1_idx` (`clientes_id_cliente` ASC),
  CONSTRAINT `fk_facturas_clientes1`
    FOREIGN KEY (`clientes_id_cliente`)
    REFERENCES `u724389367_desax`.`clientes` (`id_cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `u724389367_desax`.`categorias`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `u724389367_desax`.`categorias` ;

CREATE TABLE IF NOT EXISTS `u724389367_desax`.`categorias` (
  `id_categoria` INT NOT NULL AUTO_INCREMENT,
  `nombre_categoria` VARCHAR(45) NOT NULL,
  `descripcion_categoria` TEXT(200) NULL,
  PRIMARY KEY (`id_categoria`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `u724389367_desax`.`depositos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `u724389367_desax`.`depositos` ;

CREATE TABLE IF NOT EXISTS `u724389367_desax`.`depositos` (
  `id_deposito` INT NOT NULL AUTO_INCREMENT,
  `nombre_deposito` VARCHAR(45) NULL,
  `ubicacion_deposito` TEXT(200) NULL,
  PRIMARY KEY (`id_deposito`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `u724389367_desax`.`productos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `u724389367_desax`.`productos` ;

CREATE TABLE IF NOT EXISTS `u724389367_desax`.`productos` (
  `id_producto` INT NOT NULL AUTO_INCREMENT,
  `nombre_producto` VARCHAR(45) NOT NULL,
  `cantidad_producto` INT NOT NULL,
  `costo_producto` INT NOT NULL,
  `cod_barras_producto` VARCHAR(45) NULL,
  `categorias_id_categoria` INT NULL,
  `depositos_id_deposito` INT NULL,
  PRIMARY KEY (`id_producto`),
  INDEX `fk_productos_categorias1_idx` (`categorias_id_categoria` ASC),
  INDEX `fk_productos_depositos1_idx` (`depositos_id_deposito` ASC),
  CONSTRAINT `fk_productos_categorias1`
    FOREIGN KEY (`categorias_id_categoria`)
    REFERENCES `u724389367_desax`.`categorias` (`id_categoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_productos_depositos1`
    FOREIGN KEY (`depositos_id_deposito`)
    REFERENCES `u724389367_desax`.`depositos` (`id_deposito`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `u724389367_desax`.`proveedores`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `u724389367_desax`.`proveedores` ;

CREATE TABLE IF NOT EXISTS `u724389367_desax`.`proveedores` (
  `id_proveedor` INT NOT NULL AUTO_INCREMENT,
  `nombre_proveedor` VARCHAR(45) NOT NULL,
  `direccion_proveedor` TEXT(200) NULL,
  `email_proveedor` TEXT(100) NULL,
  `telefono_proveedor` INT(20) NULL,
  PRIMARY KEY (`id_proveedor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `u724389367_desax`.`listas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `u724389367_desax`.`listas` ;

CREATE TABLE IF NOT EXISTS `u724389367_desax`.`listas` (
  `id_lista` INT NOT NULL AUTO_INCREMENT,
  `nombre_lista` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_lista`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `u724389367_desax`.`productos_listados`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `u724389367_desax`.`productos_listados` ;

CREATE TABLE IF NOT EXISTS `u724389367_desax`.`productos_listados` (
  `id_producto_listado` INT NOT NULL AUTO_INCREMENT,
  `productos_id_producto` INT NOT NULL,
  `listas_id_lista` INT NULL,
  `proveedores_id_proveedor` INT NULL,
  `precio_venta_listado` INT NOT NULL,
  PRIMARY KEY (`id_producto_listado`),
  INDEX `fk_productos_listados_listas1_idx` (`listas_id_lista` ASC),
  INDEX `fk_productos_listados_productos1_idx` (`productos_id_producto` ASC),
  INDEX `fk_productos_listados_proveedores1_idx` (`proveedores_id_proveedor` ASC),
  CONSTRAINT `fk_productos_listados_listas1`
    FOREIGN KEY (`listas_id_lista`)
    REFERENCES `u724389367_desax`.`listas` (`id_lista`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_productos_listados_productos1`
    FOREIGN KEY (`productos_id_producto`)
    REFERENCES `u724389367_desax`.`productos` (`id_producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_productos_listados_proveedores1`
    FOREIGN KEY (`proveedores_id_proveedor`)
    REFERENCES `u724389367_desax`.`proveedores` (`id_proveedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `u724389367_desax`.`medios_pago`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `u724389367_desax`.`medios_pago` ;

CREATE TABLE IF NOT EXISTS `u724389367_desax`.`medios_pago` (
  `id_medio_pago` INT NOT NULL AUTO_INCREMENT,
  `nombre_medio_pago` VARCHAR(45) NOT NULL,
  `cuotas_medio_pago` JSON NULL,
  PRIMARY KEY (`id_medio_pago`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `u724389367_desax`.`detalles_facturas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `u724389367_desax`.`detalles_facturas` ;

CREATE TABLE IF NOT EXISTS `u724389367_desax`.`detalles_facturas` (
  `facturas_id_factura` INT NOT NULL,
  `productos_listados_id_producto_listado` INT NOT NULL,
  `medios_pago_id_medio_pago` INT NOT NULL,
  `cantidad_pagos_detalle_factura` INT NULL,
  `cantidad_producto_facturado_detalle_factura` INT NULL,
  INDEX `fk_detalles_productos_listados1_idx` (`productos_listados_id_producto_listado` ASC),
  INDEX `fk_detalles_facturas_medios_pago1_idx` (`medios_pago_id_medio_pago` ASC),
  CONSTRAINT `fk_detalles_productos_listados1`
    FOREIGN KEY (`productos_listados_id_producto_listado`)
    REFERENCES `u724389367_desax`.`productos_listados` (`id_producto_listado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_detalles_facturas1`
    FOREIGN KEY (`facturas_id_factura`)
    REFERENCES `u724389367_desax`.`facturas` (`id_factura`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_detalles_facturas_medios_pago1`
    FOREIGN KEY (`medios_pago_id_medio_pago`)
    REFERENCES `u724389367_desax`.`medios_pago` (`id_medio_pago`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `u724389367_desax`.`ingresos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `u724389367_desax`.`ingresos` ;

CREATE TABLE IF NOT EXISTS `u724389367_desax`.`ingresos` (
  `id_ingresos` INT NOT NULL AUTO_INCREMENT,
  `fecha_ingreso` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `depositos_id_deposito` INT NOT NULL,
  PRIMARY KEY (`id_ingresos`),
  INDEX `fk_ingresos_depositos1_idx` (`depositos_id_deposito` ASC),
  CONSTRAINT `fk_ingresos_depositos1`
    FOREIGN KEY (`depositos_id_deposito`)
    REFERENCES `u724389367_desax`.`depositos` (`id_deposito`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `u724389367_desax`.`egresos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `u724389367_desax`.`egresos` ;

CREATE TABLE IF NOT EXISTS `u724389367_desax`.`egresos` (
  `id_egresos` INT NOT NULL AUTO_INCREMENT,
  `fecha_egreso` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `depositos_id_deposito` INT NOT NULL,
  PRIMARY KEY (`id_egresos`),
  INDEX `fk_egresos_depositos1_idx` (`depositos_id_deposito` ASC),
  CONSTRAINT `fk_egresos_depositos1`
    FOREIGN KEY (`depositos_id_deposito`)
    REFERENCES `u724389367_desax`.`depositos` (`id_deposito`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `u724389367_desax`.`facturas_hechas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `u724389367_desax`.`facturas_hechas` ;

CREATE TABLE IF NOT EXISTS `u724389367_desax`.`facturas_hechas` (
  `id_factura_hecha` INT NOT NULL AUTO_INCREMENT,
  `cliente_factura_hecha` VARCHAR(45) NULL,
  PRIMARY KEY (`id_factura_hecha`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `u724389367_desax`.`detalles_facturas_hechas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `u724389367_desax`.`detalles_facturas_hechas` ;

CREATE TABLE IF NOT EXISTS `u724389367_desax`.`detalles_facturas_hechas` (
  `facturas_hechas_id_factura_hecha` INT NOT NULL,
  INDEX `fk_detalles_facturas_hechas_facturas_hechas1_idx` (`facturas_hechas_id_factura_hecha` ASC),
  CONSTRAINT `fk_detalles_facturas_hechas_facturas_hechas1`
    FOREIGN KEY (`facturas_hechas_id_factura_hecha`)
    REFERENCES `u724389367_desax`.`facturas_hechas` (`id_factura_hecha`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `u724389367_desax` ;

-- -----------------------------------------------------
-- procedure productos_todos
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`productos_todos`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE productos_todos ()
BEGIN
	SELECT id_producto, nombre_producto, cantidad_producto, costo_producto, cod_barras_producto
	FROM productos;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure productos_nuevo
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`productos_nuevo`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE productos_nuevo (in var1 VARCHAR(45), in var2 INT, in var3 INT, in var4 VARCHAR(45))
BEGIN
INSERT INTO productos
(nombre_producto, cantidad_producto, costo_producto, cod_barras_producto)
VALUES
(var1, var2, var3, var4);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure productos_editar
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`productos_editar`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE productos_editar (in var1 INT, in var2 VARCHAR(45), in var3 INT, in var4 INT, in var5 VARCHAR(45))
BEGIN
UPDATE productos
SET
nombre_producto = var2,
cantidad_producto = var3,
costo_producto = var4,
cod_barras_producto = var5
WHERE id_producto = var1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure productos_buscarId
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`productos_buscarId`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE productos_buscarId (in var1 INT)
BEGIN
SELECT id_producto, nombre_producto, cantidad_producto, costo_producto, cod_barras_producto
FROM productos
WHERE id_producto = var1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure productos_borrar
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`productos_borrar`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE productos_borrar (in var1 INT)
BEGIN
DELETE FROM productos
WHERE id_producto = var1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure categorias_nueva
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`categorias_nueva`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE categorias_nueva (in var1 VARCHAR(45), in var2 TEXT(200))
BEGIN
INSERT INTO categorias
	(nombre_categoria, descripcion_categoria)
VALUES
	(var1, var2);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure categorias_todas
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`categorias_todas`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE categorias_todas ()
BEGIN
SELECT id_categoria, nombre_categoria, descripcion_categoria
FROM categorias;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure categorias_buscarId
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`categorias_buscarId`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE categorias_buscarId (in var1 INT)
BEGIN
SELECT id_categoria, nombre_categoria, descripcion_categoria
FROM categorias
WHERE id_categoria = var1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure categorias_borrar
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`categorias_borrar`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE categorias_borrar (in var1 INT)
BEGIN
DELETE FROM categorias
WHERE id_categoria = var1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure categorias_editar
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`categorias_editar`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE categorias_editar (in var1 INT, in var2 VARCHAR(45), in var3 TEXT(200))
BEGIN
UPDATE categorias
SET
nombre_categoria = var2,
descripcion_categoria = var3
WHERE id_categoria = var1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure depositos_nuevo
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`depositos_nuevo`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE depositos_nuevo (in var1 VARCHAR(45), in var2 TEXT(200))
BEGIN
INSERT INTO depositos
(nombre_deposito, direccion_deposito)
VALUES
(var1, var2);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure depositos_todos
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`depositos_todos`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE depositos_todos ()
BEGIN
SELECT id_deposito, nombre_deposito, direccion_deposito
FROM depositos;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure depositos_buscarId
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`depositos_buscarId`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE depositos_buscarId(in var1 INT)
BEGIN
SELECT id_deposito, nombre_deposito, direccion_deposito
FROM depositos
WHERE id_deposito = var1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure depositos_editar
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`depositos_editar`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE depositos_editar (in var1 INT, in var2 VARCHAR(45), in var3 TEXT(200))
BEGIN
UPDATE depositos
SET
nombre_deposito = var2, 
direccion_deposito = var3
WHERE id_deposito = var1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure depositos_borrar
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`depositos_borrar`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE depositos_borrar (in var1 INT)
BEGIN
DELETE FROM depositos
WHERE id_deposito = var1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure listas_todas
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`listas_todas`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE listas_todas ()
BEGIN
SELECT id_lista, nombre_lista
FROM listas;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure listas_nueva
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`listas_nueva`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE listas_nueva (in var1 VARCHAR(45))
BEGIN
INSERT INTO listas
(nombre_lista)
VALUES
(var1);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure listas_editar
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`listas_editar`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE listas_editar (in var1 INT, in var2 VARCHAR(45))
BEGIN
UPDATE listas
SET
nombre_lista = var2
WHERE id_lista = var1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure listas_buscarId
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`listas_buscarId`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE listas_buscarId (in var1 INT)
BEGIN
SELECT id_lista, nombre_lista
FROM listas
WHERE id_lista = var1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure listas_borrar
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`listas_borrar`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE listas_borrar(in var1 INT)
BEGIN
DELETE FROM listas
WHERE id_lista = var1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure proveedores_todos
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`proveedores_todos`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE proveedores_todos ()
BEGIN
SELECT id_proveedor,
    nombre_proveedor,
    direccion_proveedor,
    email_proveedor,
    telefono_proveedor
FROM proveedores;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure proveedores_nuevo
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`proveedores_nuevo`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE proveedores_nuevo (in var1 VARCHAR(45), in var2 TEXT(200), in var3 TEXT(100), in var4 INT)
BEGIN
INSERT INTO proveedores
(nombre_proveedor,
direccion_proveedor,
email_proveedor,
telefono_proveedor)
VALUES
(var1, var2, var3, var4);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure proveedores_editar
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`proveedores_editar`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE proveedores_editar (in var1 INT, in var2 VARCHAR(45), in var3 TEXT(200), in var4 TEXT(100), in var5 INT)
BEGIN
UPDATE proveedores
SET
nombre_proveedor = var2,
direccion_proveedor = var3,
email_proveedor = var4,
telefono_proveedor = var5
WHERE id_proveedor = var1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure proveedores_buscarId
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`proveedores_buscarId`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE proveedores_buscarId(in var1 INT)
BEGIN
SELECT id_proveedor,
    nombre_proveedor,
    direccion_proveedor,
    email_proveedor,
    telefono_proveedor
FROM proveedores
WHERE id_proveedor = var1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure proveedores_borrar
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`proveedores_borrar`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE proveedores_borrar (in var1 INT)
BEGIN
DELETE FROM proveedores
WHERE id_proveedor = var1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure medios_pago_todos
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`medios_pago_todos`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE medios_pago_todos ()
BEGIN
SELECT id_medio_pago,
    nombre_medio_pago,
    cuotas_medio_pago
FROM medios_pago;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure medios_pago_nuevo
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`medios_pago_nuevo`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE medios_pago_nuevo (in var1 VARCHAR(45), in var2 JSON)
BEGIN
INSERT INTO medios_pago
(nombre_medio_pago,
cuotas_medio_pago)
VALUES
(var1, var2);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure medios_pago_editar
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`medios_pago_editar`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE medios_pago_editar (in var1 INT, in var2 VARCHAR(45), in var3 JSON)
BEGIN
UPDATE medios_pago
SET
nombre_medio_pago = var2,
cuotas_medio_pago = var3
WHERE id_medio_pago = var1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure medios_pago_buscarId
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`medios_pago_buscarId`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE medios_pago_buscarId (in var1 INT)
BEGIN
SELECT id_medio_pago,
    nombre_medio_pago,
    cuotas_medio_pago
FROM medios_pago
WHERE id_medio_pago = var1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure medios_pago_borrar
-- -----------------------------------------------------

USE `u724389367_desax`;
DROP procedure IF EXISTS `u724389367_desax`.`medios_pago_borrar`;

DELIMITER $$
USE `u724389367_desax`$$
CREATE PROCEDURE medios_pago_borrar (in var1 INT)
BEGIN
DELETE FROM medios_pago
WHERE id_medio_pago = var1;
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `u724389367_desax`.`clientes`
-- -----------------------------------------------------
START TRANSACTION;
USE `u724389367_desax`;
INSERT INTO `u724389367_desax`.`clientes` (`id_cliente`, `nombre_cliente`) VALUES (1, 'Anónimo');
INSERT INTO `u724389367_desax`.`clientes` (`id_cliente`, `nombre_cliente`) VALUES (2, 'Fulano');
INSERT INTO `u724389367_desax`.`clientes` (`id_cliente`, `nombre_cliente`) VALUES (3, 'Mengano');
INSERT INTO `u724389367_desax`.`clientes` (`id_cliente`, `nombre_cliente`) VALUES (4, 'Maestruli');
INSERT INTO `u724389367_desax`.`clientes` (`id_cliente`, `nombre_cliente`) VALUES (5, 'Hombre invisible');

COMMIT;


-- -----------------------------------------------------
-- Data for table `u724389367_desax`.`facturas`
-- -----------------------------------------------------
START TRANSACTION;
USE `u724389367_desax`;
INSERT INTO `u724389367_desax`.`facturas` (`id_factura`, `clientes_id_cliente`, `fecha_factura`, `tipo_factura`, `vendedor_factura`) VALUES (1, 3, DEFAULT, 'A', NULL);
INSERT INTO `u724389367_desax`.`facturas` (`id_factura`, `clientes_id_cliente`, `fecha_factura`, `tipo_factura`, `vendedor_factura`) VALUES (2, 4, DEFAULT, 'E', NULL);
INSERT INTO `u724389367_desax`.`facturas` (`id_factura`, `clientes_id_cliente`, `fecha_factura`, `tipo_factura`, `vendedor_factura`) VALUES (3, 5, DEFAULT, 'D', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `u724389367_desax`.`categorias`
-- -----------------------------------------------------
START TRANSACTION;
USE `u724389367_desax`;
INSERT INTO `u724389367_desax`.`categorias` (`id_categoria`, `nombre_categoria`, `descripcion_categoria`) VALUES (DEFAULT, 'Bebidas', 'Alimentación humana');
INSERT INTO `u724389367_desax`.`categorias` (`id_categoria`, `nombre_categoria`, `descripcion_categoria`) VALUES (DEFAULT, 'Comidas', 'Alimentación humana');
INSERT INTO `u724389367_desax`.`categorias` (`id_categoria`, `nombre_categoria`, `descripcion_categoria`) VALUES (DEFAULT, 'Venenos', 'Exterminación humana');

COMMIT;


-- -----------------------------------------------------
-- Data for table `u724389367_desax`.`depositos`
-- -----------------------------------------------------
START TRANSACTION;
USE `u724389367_desax`;
INSERT INTO `u724389367_desax`.`depositos` (`id_deposito`, `nombre_deposito`, `ubicacion_deposito`) VALUES (DEFAULT, 'Deposito 1', 'Argentina, Buenos Aires, Villa Palito');
INSERT INTO `u724389367_desax`.`depositos` (`id_deposito`, `nombre_deposito`, `ubicacion_deposito`) VALUES (DEFAULT, 'Deposito 2', 'Bolivia, No sé');
INSERT INTO `u724389367_desax`.`depositos` (`id_deposito`, `nombre_deposito`, `ubicacion_deposito`) VALUES (DEFAULT, 'Deposito 3', 'Acá al lado');

COMMIT;


-- -----------------------------------------------------
-- Data for table `u724389367_desax`.`productos`
-- -----------------------------------------------------
START TRANSACTION;
USE `u724389367_desax`;
INSERT INTO `u724389367_desax`.`productos` (`id_producto`, `nombre_producto`, `cantidad_producto`, `costo_producto`, `cod_barras_producto`, `categorias_id_categoria`, `depositos_id_deposito`) VALUES (DEFAULT, 'Coca-Cola', 70, 20, NULL, 1, 1);
INSERT INTO `u724389367_desax`.`productos` (`id_producto`, `nombre_producto`, `cantidad_producto`, `costo_producto`, `cod_barras_producto`, `categorias_id_categoria`, `depositos_id_deposito`) VALUES (DEFAULT, 'Manaos Cola', 120, 15, NULL, 3, 1);
INSERT INTO `u724389367_desax`.`productos` (`id_producto`, `nombre_producto`, `cantidad_producto`, `costo_producto`, `cod_barras_producto`, `categorias_id_categoria`, `depositos_id_deposito`) VALUES (DEFAULT, 'Sprite', 40, 20, NULL, 1, 2);
INSERT INTO `u724389367_desax`.`productos` (`id_producto`, `nombre_producto`, `cantidad_producto`, `costo_producto`, `cod_barras_producto`, `categorias_id_categoria`, `depositos_id_deposito`) VALUES (DEFAULT, 'Manaos Lima', 110, 15, NULL, 3, 2);
INSERT INTO `u724389367_desax`.`productos` (`id_producto`, `nombre_producto`, `cantidad_producto`, `costo_producto`, `cod_barras_producto`, `categorias_id_categoria`, `depositos_id_deposito`) VALUES (DEFAULT, 'Amvorgesa', 1, 10000, 'ACM1PT', 2, 3);

COMMIT;


-- -----------------------------------------------------
-- Data for table `u724389367_desax`.`listas`
-- -----------------------------------------------------
START TRANSACTION;
USE `u724389367_desax`;
INSERT INTO `u724389367_desax`.`listas` (`id_lista`, `nombre_lista`) VALUES (1, 'Cliente');
INSERT INTO `u724389367_desax`.`listas` (`id_lista`, `nombre_lista`) VALUES (2, 'Por mayor');
INSERT INTO `u724389367_desax`.`listas` (`id_lista`, `nombre_lista`) VALUES (3, 'Por menor');

COMMIT;


-- -----------------------------------------------------
-- Data for table `u724389367_desax`.`medios_pago`
-- -----------------------------------------------------
START TRANSACTION;
USE `u724389367_desax`;
INSERT INTO `u724389367_desax`.`medios_pago` (`id_medio_pago`, `nombre_medio_pago`, `cuotas_medio_pago`) VALUES (DEFAULT, 'Master-Card Crédito', '{\"1\" : 10, \"3\" : 15, \"6\" : 20, \"12\" : 30}');
INSERT INTO `u724389367_desax`.`medios_pago` (`id_medio_pago`, `nombre_medio_pago`, `cuotas_medio_pago`) VALUES (DEFAULT, 'Naranja', '{\"1\" : 10, \"3\" : 13, \"6\" : 18, \"12\" : 23}');
INSERT INTO `u724389367_desax`.`medios_pago` (`id_medio_pago`, `nombre_medio_pago`, `cuotas_medio_pago`) VALUES (DEFAULT, 'Efectivo', '{\"1\" : 0}');

COMMIT;

